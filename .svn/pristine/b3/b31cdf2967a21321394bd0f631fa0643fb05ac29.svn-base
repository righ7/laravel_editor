
<style>
    .demo-badge-alone{
        background: #5cb85c !important;
    }
    .demo-spin-col{
        height: 100px;
        position: relative;
        border: 1px solid #eee;
    }
    .demo-spin-icon-load{
        animation: ani-demo-spin 1s linear infinite;
    }
    @keyframes ani-demo-spin {
        from { transform: rotate(0deg);}
        50%  { transform: rotate(180deg);}
        to   { transform: rotate(360deg);}
    }
    a{
        color:#2d8cf0;
    }
    a:hover{
        color:#42A5F5;
        background: none;
    }
    .single-page {
        margin: 20px;
    }
</style>
<div id="app">
    <div class="single-page">
        <div style="width: 90%;">
            <Row type="flex">
                <i-col style="margin: 20px 0 0 34px;width: 20%">
                    <span>文章标题&nbsp;&nbsp;&nbsp;</span>
                    <i-input v-model="searchArr.title" clearable placeholder="输入标题包含的关键字" style="width: 65%;margin-left: 2px"></i-input>
                </i-col>
                {{--<i-col style="margin: 20px 0 0 15px;">--}}
                    {{--<span>作者id&nbsp;&nbsp;&nbsp;</span>--}}
                    {{--<i-input v-model="searchArr.author_id" clearable placeholder="文章作者的id" style="width: 240px"></i-input>--}}
                {{--</i-col>--}}
                <i-col style="margin: 20px 0 0 16px;width: 20%">
                    <span>商品编号&nbsp;&nbsp;&nbsp;</span>
                    <i-input v-model="searchArr.product_id" clearable placeholder="按商品编号搜索" style="width: 66%"></i-input>
                </i-col>
                <i-col style="margin: 20px 0 0 15px;width:21%">
                    <span>发布时间</span>
                    <date-picker v-model="searchArr.online_time" clearable @on-change="dateValueFormat" type="daterange" placeholder="发布时间" format="yyyy-MM-dd" style="margin-left: 14px;width: 62%"></date-picker>
                </i-col>
                <i-col style="margin: 20px 0 0 0;width:24%">
                    <span>阅读量<Icon type="ios-arrow-forward"></Icon>&nbsp;&nbsp;&nbsp;</span>
                    <i-input style="width: 22%" v-model="searchArr.read" type="number" placeholder="阅读大于" ></i-input>
                    <span style="margin-left: 0">评论数<Icon type="ios-arrow-forward"></Icon>&nbsp;&nbsp;&nbsp;</span>
                    <i-input style="width: 22%" v-model="searchArr.comments" type="number" placeholder="评论大于" ></i-input>
                </i-col>
            </Row>
            <Row type="flex">
                <i-col style="margin: 20px 0 0 34px;width:20%">
                    <span>排序方式&nbsp;&nbsp;&nbsp;&nbsp;</span>
                    <i-select v-model="searchArr.order_type" style="width:65%" clearable>
                        <i-option value="3" key="3">默认排序（按发布时间）</i-option>
                        <i-option value="1" key="1">阅读量从高到低</i-option>
                        <i-option value="2" key="2">评论数从高到低</i-option>
                    </i-select>
                </i-col>
                <i-col style="margin: 20px 0 0 16px;width:20%">
                    <span>文章类型&nbsp;&nbsp;&nbsp;</span>
                    <i-select v-model="searchArr.article_type" style="width:66%" clearable>
                        <i-option value="2" key="2">全部</i-option>
                        <i-option value="0" key="0">图集</i-option>
                        <i-option value="1" key="1">专辑</i-option>
                    </i-select>
                </i-col>
                <i-col style="margin: 20px 0 0 15px;width: 21%">
                    <span>频道&nbsp;&nbsp;&nbsp;</span>
                    <i-select v-model="searchArr.plate" style="width:62%;margin-left: 34px" clearable>
                        <i-option v-for="plate in plateList" :value="plate.value" :key="plate.value">@{{ plate.value }}</i-option>
                    </i-select>
                </i-col>
                <i-col style="margin: 20px 0 0 0;">
                        <i-button type="primary" @click="search" style="margin-left: 40px">搜索</i-button>
                        <i-button @click="toRank" style="margin-left: 8px">查看排行榜</i-button>
                </i-col>
            </Row>
            <div style="position: relative;height: 30px;margin-top: 16px" v-if="user_mark!=null">
                <Alert style="margin: 0;position: absolute;right: 0;width: 300px;" show-icon>
                    您正在看【TA的文章】，<a href="{{ '/admin/temai_article/temai_good_article' }}">点此查看全部</a>
                </Alert>
            </div>
        </div>
        <Row type="flex" justify="center" align="middle">
            <i-col span="23" style="margin-top: 20px">
                <i-table :height="tableHight" :data="tableData" :columns="tableColumns" stripe></i-table>
            </i-col>
        </Row>
        <Row type="flex" justify="center" align="middle">
            <i-col style="margin-top: 20px">
                <Page
                        :total="amount"
                        :current="pageIndex"
                        size="small"
                        :page-size="pageCount"
                        show-total
                        show-elevator
                        @on-change="pageChange"
                ></Page>
            </i-col>
        </Row>
        <Modal
                v-model="followModal"
                title="关注大神"
                loading=true>
            <i-form ref="formCustom" :model="formCustom" :rules="ruleCustom" :label-width="80">
                <form-item label="备注" prop="name">
                    <i-input type="text" placeholder="给大神起个备注吧!(3-20字)" v-model="formCustom.name"></i-input>
                </form-item>
                <form-item label="大神描述" prop="describe">
                    <i-input type="textarea" :rows="4" placeholder="添加描述，不会容易忘记哦!(10-100字)" v-model="formCustom.describe"></i-input>
                </form-item>
            </i-form>
            <div slot="footer">
                <i-button type="text" size="large" @click="followModal=false">取消</i-button>
                <i-button type="primary" size="large" @click="handleSubmit('formCustom')">关注大神</i-button>
            </div>
        </Modal>
        <back-top></back-top>
    </div>
</div>

<script>

    let vm = new Vue({
        el: '#app',
        data() {
            const validateName = (rule, value, callback) => {
                if (value === '') {
                    callback(new Error('请填写备注'));
                } else if(value.length <3 || value.length >20){
                    callback(new Error('备注为3-20个字'));
                } else {
                    callback();
                }
            };
            const validateDescribe = (rule, value, callback) => {
                if (value === '') {
                    callback(new Error('请填写描述'));
                } else if(value.length <10 || value.length >100){
                    callback(new Error('描述为10-100个字'));
                } else {
                    callback();
                }
            };
            return {
                tableColumns: [
                    {
                        title: '标题',
                        key: 'title',
                        render (h,params){
                            let row = params.row;
                            let text = row.title;
                            return h('a', {
                                attrs: {
                                    href:"{{ route('temai_article.good_article_detail') }}"+'?article='+row.article_id+'&title='+row.title+'&article_type='+row.type,
                                    target: "_blank"
                                }
                            }, text);
                        }
                    },
                    {
                        title: '类型',
                        key: 'type',
                        width: 100,
                        render (h,param){
                            let text = '';
                            let color = '';
                            switch(Number(param.row.type)){
                                case 1:
                                    text = '专辑';
                                    color= 'green';
                                    break;
                                case 0:
                                    text = '图集';
                                    color= 'blue';
                                    break;
                            }
                            return h('Tag',
                                {
                                  props:{
                                      color:color
                                  }
                                },
                                text);
                        }
                    },
                    {
                        title: '频道',
                        key: 'source',
                        width: 150,
                    },
                    {
                        title: '阅读数',
                        key: 'go_detail_count',
                        width: 130,
                    },
                    {
                        title: '评论数',
                        key: 'comments_count',
                        width: 100,
                    },
                    {
                        title: '文章发布时间',
                        key: 'behot_time',
                        width: 180,
                    },
                    {
                        title: '操作',
                        width: 180,
                        render (h,param){
                            return h('Dropdown',
                                {
                                    nativeOn: {
                                        click: function(){
                                            vm.formCustom.name='';
                                            vm.formCustom.describe='';
                                            vm.select_author=param.row.create_user_id;
                                            vm.concerdCheck();
                                        }
                                    }
                                },
                                [
                                    h('a',{
                                        attrs: {
                                            href:"javascript:void(0)"
                                        },
                                        on: {
                                            click: function(event){
                                                event.stopPropagation();
                                                vm.searchArr.online_time='';
                                                vm.searchArr.plate='';
                                                vm.searchArr.title='';
                                                vm.searchArr.author_id=param.row.create_user_id;
                                                vm.user_mark=param.row.create_user_id;
                                                vm.search();
                                            }
                                        }
                                    },'查看该作者的文章'),
                                    h('DropdownMenu',{
                                            slot: 'list',
                                        },
                                    [
                                        h('DropdownItem', '关注TA'),
                                    ]),
                            ]);
                        }
                    },
                ],
                select_author:'',
                tableData: [],
                searchArr: {
                    title: '',
                    online_time: '',
                    author_id: '',
                    plate: '',
                },
                pageSize: 100,
                pageCount: 20,
                pageIndex: 1,
                amount: 0,
                tableHight: 600,
                followModal:false,
                formCustom: {
                    name: '',
                    describe: '',
                },
                ruleCustom: {
                    name: [
                        { validator: validateName, trigger: 'change',required: true }
                    ],
                    describe: [
                        { validator: validateDescribe, trigger: 'change',required: true }
                    ],
                },
                searched:false,
                plateList:[
                    {
                        value: '放心购精选'
                    },
                    {
                        value: '每日搭配之道'
                    },
                    {
                        value: '放心家居'
                    },
                    {
                        value: '潮男指南'
                    },
                    {
                        value: '户外推荐'
                    },
                    {
                        value: '生活美食会'
                    },
                    {
                        value: '数码周刊'
                    },
                    {
                        value: '美妆丽人'
                    },
                    {
                        value: '酷奇潮玩'
                    },
                    {
                        value: '懂车品'
                    },
                    {
                        value: '宝妈推荐'
                    },
                ],
                user_mark:null,
            }
        },
        methods: {
            getArticleIssueData() {

                vm.searchArr.online_time=this.getTime();

                vm.searchArr.author_id=this.getUrlKey('user');
                vm.user_mark=this.getUrlKey('user');
                axios.get("{{ route('temai_article.articleData') }}", {
                    params: {
                        page: 1,
                        page_count: vm.pageCount,
                        searchArr:vm.searchArr,
                        online_time:vm.searchArr.online_time,
                    }
                })
                    .then(function (response) {
                        vm.tableData = response.data.data.data;
                        vm.amount = response.data.data.total;
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            //获取时间
            getTime(){
                var nowdate = new Date();
                var end_y = nowdate.getFullYear();
                var end_m = nowdate.getMonth()+1;
                var end_d = nowdate.getDate();
                var online_time=[];
                online_time[1] = end_y+'-'+end_m+'-'+end_d;
                var date = new Date(nowdate.getTime() - 7 * 24 * 3600 * 1000);
                var start_y = date.getFullYear();
                var start_m = date.getMonth()+1;
                var start_d = date.getDate();
                online_time[0] = start_y+'-'+start_m+'-'+start_d;
                return online_time;
            },
            //屏幕自适应
            screenAuto(){
                var Hproportion=window.screen.availHeight/900;
                vm.tableHight=vm.tableHight*Hproportion;
            },
            //获取URL参数
            getUrlKey (name) {
                return decodeURIComponent((new RegExp('[?|&]' + name + '=' + '([^&;]+?)(&|#|;|$)').exec(location.href) || [, ""])[1].replace(/\+/g, '%20')) || null
            },
            search() {
                // this.searchArr['title']=this.searchArr['title'].replace(/\+/g,'%2B')
                this.searched=true;         //如果未搜索
                this.handleSpinCustom();
                axios.get("{{ route('temai_article.articleData') }}", {
                    params: {
                        page: 1,
                        page_count: vm.pageCount,
                        searchArr:vm.searchArr,
                        online_time:vm.searchArr.online_time,
                    }
                })
                    .then(function (response) {
                        vm.tableData = response.data.data.data;
                        vm.amount = response.data.data.total;
                        vm.$Spin.hide();
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            pageChange(index) {
                window.scrollTo(0,0); // 触发回到顶部，再加载数据
                vm.pageIndex=index;
                this.handleSpinCustom();
                if (!vm.searched){
                    vm.searchArr.online_time=this.getTime();
                }
                axios.get("{{ route('temai_article.articleData') }}", {
                    params: {
                        page: vm.pageIndex,
                        page_count: vm.pageCount,
                        searchArr:vm.searchArr,
                        online_time:vm.searchArr.online_time,
                    }
                })
                    .then(function (response) {
                        vm.tableData = response.data.data.data;
                        vm.amount = response.data.data.total;
                        vm.$Spin.hide();
                    })
                    .catch(function (error) {
                        console.log(error);
                    });
            },
            handleSpinCustom () {
                this.$Spin.show({
                    render: (h) => {
                        return h('div', [
                            h('Icon', {
                                'class': 'demo-spin-icon-load',
                                props: {
                                    type: 'ios-loading',
                                    size: 18
                                }
                            }),
                            h('div', 'Loading')
                        ])
                    }
                });
            },
            toRank(){
                window.location.href="{{ route('temai_article.author_rank') }}";
            },
            dateValueFormat(f,v){
                this.searchArr.online_time = f;
            },
            handleSubmit(name){
                this.$refs[name].validate((valid) => {
                    if (valid) {
                        axios.get("{{ route('temai_article.concern_god') }}", {
                            params: {
                                name: vm.formCustom.name,
                                describe: vm.formCustom.describe,
                                author_id:vm.select_author,
                            }
                        })
                            .then(function (response) {
                                if (response.data.code==0){
                                    vm.$Message.success('已关注该大神！')
                                    vm.followModal=false;
                                }else {
                                    vm.$Message.success('系统出错了！')
                                }
                            })
                            .catch(function (error) {
                                vm.$Message.error('系统出错了！')
                            });
                    }
                })
            },
            concerdCheck(){
                axios.get("{{ route('temai_article.check_concerned') }}", {
                    params: {
                        author_id:vm.select_author,
                    }
                })
                    .then(function (response) {
                        if (response.data.code==0){
                            vm.followModal=true;
                        }else if(response.data.code==1){
                            vm.$Message.success('您已关注过该大神')
                        }else {
                            vm.$Message.error('系统出错了！')
                        }
                    })
                    .catch(function (error) {
                        vm.$Message.error('系统出错了！')
                    });

            }
        }
    });
    vm.screenAuto();
    vm.getArticleIssueData();
</script>