<?php

namespace App\Admin\Controllers\Api\Auth;

use Illuminate\Http\Request;
use Illuminate\Routing\Controller;
use DB;
use Illuminate\Support\Facades\Hash;

class UserController extends Controller
{
    public function getUserAccountData(Request $request)
    {
        try{
            $result = [
                'code' => 0,
                'errMsg' => '',
                'accounts' => [],
                'articleType' => [],
            ];

            $username = $request->username ?? '';

            $password = DB::table('cmf_users')->where('user_login', $username)->value('password');

            $authCheck = Hash::check($request->password ?? '',$password);

            if(!$authCheck)
                throw new \Exception('用户名或密码错误，请重新输入');

            // 查询出账户表主键数组
            $account_ids = DB::table(DB::raw('cmf_users as a'))
                ->rightJoin(DB::raw('platform_permission as b'), 'a.id','=','b.user_id')
                ->where('a.user_login', $username)
                ->pluck('b.account_id');

            // 平台名对照数组
            $platform = DB::table('platform')->pluck('platform_name','id');

            // 文章类型对照数组
            $articleTypes = config('table_column_transform.editor.article.type') ?? [];
            $result['articleType'] = $articleTypes;

            if($account_ids){
                $accounts = DB::table('platform_account')
                    ->whereIn('id', $account_ids)
                    ->select('platform', 'shop_id', 'password_account')
                    ->get();
                $shop_ids = $accounts->pluck('shop_id') ?? [];
                $distribute = DB::table('platform_article_distribute')
                    ->whereIn('account_id',$shop_ids)
                    ->where('is_get',0)
                    ->where('status', 0)
                    ->select('id','account_id','article_type')->get();
                // 增加平台名、文章类型对应数据总量
                foreach($accounts as $account){
                    $account->platform_name = $platform[$account->platform] ?? '未知';
                    $arr = [];
                    foreach($articleTypes as $k => $v){
                        $arr[$k] = $distribute->where('account_id', $account->shop_id)->where('article_type',$k)->count();
                    }
                    $account->article_amount = $arr;
                }
                $result['accounts'] = $accounts;
            }

        } catch (\Exception $e) {
            $result['code'] = 1;
            $result['errMsg'] = $e->getMessage();
        } finallY {
            return response()->json($result);
        }
    }
}
