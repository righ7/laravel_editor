<script>
    // 商品展示组件
    let goodsShow = {
        props: ['shop_type'],
        template:`
            <div style="margin: 2px;">
                <Row style="margin-left: 2px;">
                <Col>
                    <Row>
                        <i-col class="search-position">
                            三级分类『可搜索、可单选』：<br/>
                            <Cascader :data="categories" v-model="search.category_id" filterable change-on-select style="width: 200px;"></Cascader>
                        </i-col>
                        <i-col class="search-position">
                            <div>
                                商品名称：<br/>
                                <i-input v-model="search.goods_name" clearable style="width: 150px;"></i-input>
                            </div>
                        </i-col>
                        <i-col class="search-position">
                            <div>
                                商品ID / 链接：<br/>
                                <i-input v-model="search.goods_id" clearable style="width: 150px;"></i-input>
                            </div>
                        </i-col>
                        <i-col class="search-position">
                            <div>
                                店铺名称：<br/>
                                <i-input v-model="search.shop_name" clearable style="width: 120px;"></i-input>
                            </div>
                        </i-col>
                        <i-col class="search-position">
                            <div>
                                店铺ID / 链接：<br/>
                                <i-input v-model="search.shop_id" clearable style="width: 120px;"></i-input>
                            </div>
                        </i-col>
                        <i-col class="search-position" style="clear: both">
                            <div>
                                是否推荐商品：<br/>
                                <i-switch v-model="search.is_recommend" size="large" true-value="1" false-value="3">
                                    <span slot="close">全部</span>
                                    <span slot="open">是</span >
                                </i-switch>
                            </div>
                        </i-col>
                        <i-col class="search-position" :style="{ display: goods_restrict == 1 ? 'none' : 'block'}">
                            <div style="height: 50px;color:#FF0000;font-weight: bold">
                                是否自有：<br/>
                                <i-switch v-model="search.shop_our_status">
                                    <Icon type="md-checkmark" slot="open"></Icon>
                                    <Icon type="md-close" slot="close"></Icon>
                                </i-switch>
                            </div>
                        </i-col>
                        <i-col class="search-position">
                            <div>
                                佣金比例「%」：<br/>
                                <InputNumber :max="100" :min="0" :step="1" v-model="search.commission_rate_start" style="width: 45px;"></InputNumber>
                                -
                                <InputNumber :max="100" :min="0" :step="1" v-model="search.commission_rate_end" style="width: 45px;"></InputNumber>
                            </div>
                        </i-col>
                        <i-col class="search-position">
                            <div>
                                价格范围：<br/>
                                <InputNumber :step="1" v-model="search.price_start" style="width: 50px;"></InputNumber>
                                -
                                <InputNumber :step="1" v-model="search.price_end" style="width: 50px;"></InputNumber>
                            </div>
                        </i-col>
                        <i-col class="search-position">
                            <div>
                                新品时间：<br/>
                                <radio-group @on-change="createdAtSearch" v-model="search.create_time" type="button">
                                    <Radio label="全部"></Radio>
                                    <Radio label="3天内"></Radio>
                                    <Radio label="7天内"></Radio>
                                    <Radio label="15天内"></Radio>
                                    <Radio label="30天内"></Radio>
                                </radio-group>
                            </div>
                        </i-col>
                        <i-col class="search-position">
                            <div>
                                <br/>
                                <i-button type="primary" @click="getGoodsData">搜索</i-button>
                                <i-button @click="reset(3)">重置</i-button>
                            </div>
                        </i-col>
                    </Row>
                </Col>
                <Col span="22" style="margin: 4px 0 5px 0">
                    <Row style="margin-left: 2px;">
                        <i-col span="22" style="margin: 4px 0 5px 0">
                            <ButtonGroup>
                                <Button @click="orderChange(index, item)" v-for="(item,index) in order.orderArray" :key="item.id" :type="item.action == true ? 'primary':'default'">
                                    @{{ item.text }}<Icon style="font-size: 15px;" :type="item.order == 'desc' ? order.orderIcon.down:order.orderIcon.up"/>
                                </Button>
                            </ButtonGroup>
                        </i-col>
                    </Row>
                </Col>
            </Row>
                <Row type="flex" justify="center">
                    <Col :class="[ goods.status === true ? 'goods-select':'' ]" :key="goods.id" class="card" :xs="10" :sm="8" :md="6" :lg="4" v-for="(goods, index) in goodsData">
                        <div @click="goodsActive(index)">
                            <div class="card-content" style="width: 165px;margin: 10px auto;">
                                <div style="position: relative;">
                                    <div v-if="goods.is_recommend == 1" class="card-recommend">推荐</div>
                                    <img width="165" height="165" :src="goods.image">
                                    <div>
                                        <div class="card-url"><a :href="goods.goods_url" target="_blank">@{{ goods.title }}</a></div>
                                        <div>
                                            <span style="color: red; font-size: 16px;">￥@{{ goods.price }}</span>
                                            <span style="color: red;">佣金</span> <span style="color:red; font-size:15px;">@{{ commission_earnings(goods.commission_rate, goods.price) }} (@{{ commission_rate(goods.commission_rate)}})</span>
                                        </div>
                                        <div>
                                            销量：@{{ goods.sell_num }}
                                            <span style="margin-left: 6px;">热度：@{{ goods.goods_heat }}</span>
                                        </div>
                                        <div>
                                            <a :href="['https://haohuo.snssdk.com/views/shop/index?id='+goods.shop_id]" target="_blank">@{{ goods.shop_name }}</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <Col :span="24">
                            <div @click="drawer = true" class="goods-same" style="cursor: pointer; display:none; position:absolute; bottom: 0; right:0; background-color: #ff4517; height: 30px; text-align: center; line-height: 30px; width: 33%">
                                <span style="color: white; font-size: 18px;">找同款</span>
                            </div>
                        </Col>
                    </Col>
                </Row><br/>
                <Row type="flex" justify="center">
                    <Col>
                        <Page :total="page.total" :current="page.current" :page-size="page.pageSize" @on-change="pageCurrentChange" show-elevator show-total/>
                    </Col>
                </Row>
                <Drawer title="找同款" v-model="drawer" width="50%">
                    1234
                </Drawer>
            </div>
        `,
        data() {
            return {
                order: { // 排序
                    orderIcon: {
                        up: 'md-arrow-round-up',
                        down: 'md-arrow-round-down'
                    },
                    orderArray: [ // 排序数组对象
                        {id:1, text: '随机', column:'random', order: 'desc', action: true},
                        {id:2, text: '热度', column:'hotrank', order: 'desc', action: false},
                        {id:3, text: '佣金比例', column:'cos_ratio', order: 'desc', action: false},
                        {id:4, text: '新品', column:'created_at', order: 'desc', action: false},
                        {id:5, text: '价格', column:'discount_price', order: 'desc', action: false},
                        {id:6, text: '销量', column:'all_sell_num', order: 'desc', action: false}
                    ],
                },
                search:{ // 搜索
                    category_id: ['[48]'],
                    commission_rate_start: 0,
                    commission_rate_end: 100,
                    price_start: 0,
                    price_end: 999999,
                    is_recommend: '3',
                    goods_id: '',
                    goods_name: '',
                    shop_id: '',
                    shop_name: '',
                    shop_type: this.shop_type,
                    shop_our: [], //自有店铺
                    shop_our_status: true,
                    create_time: '全部',
                    order: '',
                },
                goods_restrict: 0, // 是否自有商品
                goodsData: [], // 商品数据,
                page: {
                    total:0,
                    current: 1,
                    pageSize: 78
                },
                drawer: false,
            }
        },
        created() {
            let that = this;
            bus.$on('syncGoodsSelectStyle', () => {
                this.goodsData = this.$store.getters.syncGoodsSelectStyle(this.goodsData);
            });
            bus.$on('getGoodsData', () => { // 获取商品
                switch(Number(that.shop_type)){
                    case 1:
                        this.searchShopConfig['xd'].map( item =>{
                            if(item.is_our === 1){
                                this.search.shop_our.push(item.shop_id);
                            }
                        });
                        break;
                    case 2:
                        this.searchShopConfig['fxg'].map( item =>{
                            if(item.is_our === 1){
                                this.search.shop_our.push(item.shop_id);
                            }
                        });
                        break;
                    case 3:
                        this.searchShopConfig['xd'].map(item => {
                            if (item.is_our === 1) {
                                this.search.shop_our.push(item.shop_id);
                            }
                        });
                        this.searchShopConfig['fxg'].map(item => {
                            if (item.is_our === 1) {
                                this.search.shop_our.push(item.shop_id);
                            }
                        });
                        break;
                }
                that.getGoodsData();
            });
        },
        computed: {
            searchShopConfig() {
                return this.$store.state.temaiGoodsSearchConfig;
            },
            goodsSelect() {
                return this.$store.state.goodsSelect;
            },
            categories() {
                return this.$store.state.categories;
            }
        },
        methods: {
            getGoodsData(page = 1) { // 获取商品数据
                let that = this;

                let url = this.$store.state.commonUrlV1;
                let limit = this.$store.state.page.limit;
                axios.get(url, {
                    params: {
                        page: page,
                        limit: limit,
                        searchArr: that.search,
                        order: that.search.order
                    }
                }).then(function (response) {
                    that.goodsData = response.data.data;
                    that.page.total = response.data.count;
                });
            },
            orderChange(index, item){ // 排序按钮，触发搜索
                let that = this;

                if(item.action === true){
                    if(item.order === 'desc'){
                        that.order.orderArray[index].order = 'asc';
                    }else{
                        that.order.orderArray[index].order = 'desc';
                    }
                }else {
                    that.order.orderArray.map(item=>{
                        item.order = 'desc';
                        item.action = false;
                    });
                    that.order.orderArray[index].action = true;
                }

                let orderArray = that.order.orderArray;
                for (let i = 0; i< orderArray.length; i++){
                    if(orderArray[i].action === true){
                        that.search.order = orderArray[i].column+' '+ orderArray[i].order;
                        break;
                    }
                }
                that.getGoodsData();
            },
            createdAtSearch() {
                this.getGoodsData();
            },
            goodsActive(index) {
                let that = this;
                if(that.goodsData[index].status === true){
                    that.goodsData[index].status = false;
                    that.goodsSelect.map((obj, key)=>{
                        if(obj.id === that.goodsData[index].id){
                            that.$store.commit('delGoodsSelect',key);
                        }
                    });
                }else{
                    let is_exist = false; // 查找是否有同样记录
                    that.goodsSelect.map((obj, key)=>{
                        if(obj.id === that.goodsData[index].id){
                            is_exist = true;
                        }
                    });

                    if(is_exist) this.$Message.info('商品已经勾选');
                    if(!is_exist){
                        that.goodsData[index].status = true;
                        that.$store.commit('addGoodsSelect',this.goodsData[index]);
                    }
                }
            },
            pageCurrentChange(page_index) {
                this.getGoodsData(page_index);
            },
            // 下述两个方法用于解决 filter 获取不到 this
            commission_rate (value) {
                return this.$store.getters.commission_rate(value);
            },
            commission_earnings (value, price) {
                return this.$store.getters.commission_earnings(value, price);
            }
        },
    };
</script>